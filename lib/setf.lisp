(in-package :lispyboi)
(provide "setf")

(defun set-caar (obj val) (setf (car (car obj)) val))
(defun set-cadr (obj val) (setf (car (cdr obj)) val))
(defun set-cdar (obj val) (setf (cdr (car obj)) val))
(defun set-cddr (obj val) (setf (cdr (cdr obj)) val))
(defun set-caaar (obj val) (setf (car (car (car obj))) val))
(defun set-caadr (obj val) (setf (car (car (cdr obj))) val))
(defun set-cadar (obj val) (setf (car (cdr (car obj))) val))
(defun set-caddr (obj val) (setf (car (cdr (cdr obj))) val))
(defun set-cdaar (obj val) (setf (cdr (car (car obj))) val))
(defun set-cdadr (obj val) (setf (cdr (car (cdr obj))) val))
(defun set-cddar (obj val) (setf (cdr (cdr (car obj))) val))
(defun set-cdddr (obj val) (setf (cdr (cdr (cdr obj))) val))
(defun set-caaaar (obj val) (setf (car (car (car (car obj)))) val))
(defun set-caaadr (obj val) (setf (car (car (car (cdr obj)))) val))
(defun set-caadar (obj val) (setf (car (car (cdr (car obj)))) val))
(defun set-caaddr (obj val) (setf (car (car (cdr (cdr obj)))) val))
(defun set-cadaar (obj val) (setf (car (cdr (car (car obj)))) val))
(defun set-cadadr (obj val) (setf (car (cdr (car (cdr obj)))) val))
(defun set-caddar (obj val) (setf (car (cdr (cdr (car obj)))) val))
(defun set-cadddr (obj val) (setf (car (cdr (cdr (cdr obj)))) val))
(defun set-cdaaar (obj val) (setf (cdr (car (car (car obj)))) val))
(defun set-cdaadr (obj val) (setf (cdr (car (car (cdr obj)))) val))
(defun set-cdadar (obj val) (setf (cdr (car (cdr (car obj)))) val))
(defun set-cdaddr (obj val) (setf (cdr (car (cdr (cdr obj)))) val))
(defun set-cddaar (obj val) (setf (cdr (cdr (car (car obj)))) val))
(defun set-cddadr (obj val) (setf (cdr (cdr (car (cdr obj)))) val))
(defun set-cdddar (obj val) (setf (cdr (cdr (cdr (car obj)))) val))
(defun set-cddddr (obj val) (setf (cdr (cdr (cdr (cdr obj)))) val))


(defun set-caddddr (obj val) (setf (car (cdr (cdr (cdr (cdr obj))))) val))

(defsetf first %set-car)
(defsetf second set-cadr)
(defsetf third set-caddr)
(defsetf fourth set-cadddr)
(defsetf fifth set-caddddr)

(defsetf caar set-caar)
(defsetf cadr set-cadr)
(defsetf cdar set-cdar)
(defsetf cddr set-cddr)
(defsetf caaar set-caaar)
(defsetf caadr set-caadr)
(defsetf cadar set-cadar)
(defsetf caddr set-caddr)
(defsetf cdaar set-cdaar)
(defsetf cdadr set-cdadr)
(defsetf cddar set-cddar)
(defsetf cdddr set-cdddr)
(defsetf caaaar set-caaaar)
(defsetf caaadr set-caaadr)
(defsetf caadar set-caadar)
(defsetf caaddr set-caaddr)
(defsetf cadaar set-cadaar)
(defsetf cadadr set-cadadr)
(defsetf caddar set-caddar)
(defsetf cadddr set-cadddr)
(defsetf cdaaar set-cdaaar)
(defsetf cdaadr set-cdaadr)
(defsetf cdadar set-cdadar)
(defsetf cdaddr set-cdaddr)
(defsetf cddaar set-cddaar)
(defsetf cddadr set-cddadr)
(defsetf cdddar set-cdddar)
(defsetf cddddr set-cddddr)
(defsetf caddddr set-caddddr)
